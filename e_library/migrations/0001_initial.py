# Generated by Django 5.2.1 on 2025-07-17 14:35

import django.db.models.deletion
import e_library.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0001_initial'),
        ('institutions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ELibraryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'ELibrary Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ELibraryTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ResourceRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(default=5)),
                ('review', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=e_library.models.resource_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceViewLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('action', models.CharField(choices=[('view', 'View'), ('download', 'Download')], default='view', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='AIAssistedEdit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.TextField()),
                ('tags_added', models.TextField(blank=True)),
                ('generated_on', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ELibraryResource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('pdf', 'PDF'), ('video', 'Video'), ('audio', 'Audio'), ('presentation', 'Presentation'), ('external_link', 'External Link')], max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to=e_library.models.resource_upload_path)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('visibility', models.CharField(choices=[('students', 'Students'), ('teachers', 'Teachers'), ('all', 'All Users'), ('institution', 'Institution Only'), ('public', 'Public')], default='students', max_length=20)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_rejected', models.BooleanField(default=False)),
                ('approval_comment', models.TextField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('auto_summary', models.TextField(blank=True, null=True)),
                ('ai_tags', models.TextField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('language', models.CharField(default='English', max_length=50)),
                ('license_type', models.CharField(blank=True, max_length=50, null=True)),
                ('copyright_holder', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_e_library_resources', to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(blank=True, related_name='resources', to='e_library.elibrarycategory')),
                ('class_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='e_library_resources', to='classes.classlevel')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='e_library_resources', to='institutions.institution')),
                ('recommended_for', models.ManyToManyField(blank=True, related_name='recommended_resources', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejected_e_library_resources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
