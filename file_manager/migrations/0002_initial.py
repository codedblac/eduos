# Generated by Django 5.2.1 on 2025-07-17 14:35

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0002_initial'),
        ('file_manager', '0001_initial'),
        ('subjects', '0002_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='managedfile',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subjects.subject'),
        ),
        migrations.AddField(
            model_name='managedfile',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='managedfile',
            name='uploaded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='fileversion',
            name='managed_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='file_manager.managedfile'),
        ),
        migrations.AddField(
            model_name='filelock',
            name='file',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lock', to='file_manager.managedfile'),
        ),
        migrations.AddField(
            model_name='filecomment',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='file_manager.managedfile'),
        ),
        migrations.AddField(
            model_name='fileanalytics',
            name='file',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='file_manager.managedfile'),
        ),
        migrations.AddField(
            model_name='fileaccesslog',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='file_manager.managedfile'),
        ),
        migrations.AddField(
            model_name='assignmentsubmission',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='file_manager.managedfile'),
        ),
        migrations.AddField(
            model_name='sharedaccess',
            name='class_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classes.classlevel'),
        ),
        migrations.AddField(
            model_name='sharedaccess',
            name='file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_access', to='file_manager.managedfile'),
        ),
        migrations.AddField(
            model_name='sharedaccess',
            name='stream',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classes.stream'),
        ),
        migrations.AddField(
            model_name='sharedaccess',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='assignmentsubmission',
            unique_together={('file', 'student')},
        ),
    ]
