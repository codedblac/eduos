# Generated by Django 5.2.1 on 2025-07-17 14:35

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classes', '0001_initial'),
        ('institutions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LessonScaffoldSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('period', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('missed', 'Missed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['scheduled_date', 'scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='LessonSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered_on', models.DateField(default=django.utils.timezone.now)),
                ('summary', models.TextField(blank=True)),
                ('coverage_status', models.CharField(choices=[('covered', 'Covered'), ('partial', 'Partially Covered'), ('postponed', 'Postponed'), ('cancelled', 'Cancelled'), ('skipped', 'Skipped')], default='covered', max_length=20)),
                ('homework', models.TextField(blank=True)),
                ('student_engagement_notes', models.TextField(blank=True)),
                ('challenges_faced', models.TextField(blank=True)),
                ('teacher_reflection', models.TextField(blank=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-delivered_on'],
            },
        ),
        migrations.CreateModel(
            name='LessonTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('objectives', models.TextField()),
                ('activities', models.TextField(blank=True)),
                ('assessments', models.TextField(blank=True)),
                ('teaching_method', models.CharField(max_length=50)),
                ('delivery_mode', models.CharField(default='in_person', max_length=20)),
                ('recommended_duration', models.PositiveIntegerField(default=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LessonAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='lesson_files/')),
                ('external_link', models.URLField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LessonFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('student', 'Student'), ('peer', 'Peer'), ('supervisor', 'Supervisor')], max_length=20)),
                ('rating', models.PositiveIntegerField(blank=True, null=True)),
                ('comment', models.TextField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LessonPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('objectives', models.TextField()),
                ('activities', models.TextField(blank=True)),
                ('assessments', models.TextField(blank=True)),
                ('teaching_method', models.CharField(choices=[('lecture', 'Lecture'), ('discussion', 'Discussion'), ('practical', 'Practical'), ('digital', 'Digital'), ('hybrid', 'Hybrid')], default='lecture', max_length=50)),
                ('delivery_mode', models.CharField(choices=[('in_person', 'In-Person'), ('online', 'Online'), ('hybrid', 'Hybrid')], default='in_person', max_length=20)),
                ('duration_minutes', models.PositiveIntegerField(default=40)),
                ('resources', models.TextField(blank=True)),
                ('week_number', models.PositiveIntegerField()),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_draft', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classes.classlevel')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='institutions.institution')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lesson_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['term', 'class_level', 'subject', 'week_number'],
            },
        ),
    ]
